name: Build & Push next-iam to GHCR

on:
  push:
    branches: [main]
    paths:
      - "next-iam/**"
      - ".github/workflows/**"
  workflow_dispatch:

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/next-iam

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Update Kustomize image tag
        run: |
          FILE=next-iam/k8s/base/kustomization.yaml
          IMG=ghcr.io/wayloncoffee/next-iam
          TAG=${{ steps.vars.outputs.TAG }}
          # 用 yq 更优；若未安装，用 sed 简化替换：
          sed -i "s|name: ${IMG}[[:space:]]*newTag: .*|name: ${IMG}\n    newTag: ${TAG}|" "$FILE"

      - name: Commit & push
        run: |
          git config user.name "WaylonCoffee"
          git config user.email "waylon_coffee@outlook.com"
          git add next-iam/k8s/base/kustomization.yaml
          git commit -m "chore(k8s): bump next-iam image to ${{ steps.vars.outputs.TAG }}"
           git push

      - name: owner lowercase
        run: echo "OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # 关键：metadata-action 产出 tags / labels
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.OWNER_LC }}/next-iam
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Resolve image & cache refs (lowercase owner)
        id: img
        shell: bash
        run: |
          set -euo pipefail
          owner='${{ github.repository_owner }}'
          owner_lc="$(echo "$owner" | tr '[:upper:]' '[:lower:]')"
          image="ghcr.io/${owner_lc}/next-iam"
          cache_ref="${image}:buildcache"
          echo "image=$image"       >> "$GITHUB_OUTPUT"
          echo "cache_ref=$cache_ref" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./next-iam
          file: ./next-iam/Dockerfile
          push: true
          tags: |
            ghcr.io/wayloncoffee/next-iam:latest
            ghcr.io/wayloncoffee/next-iam:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }} # 可选
          # 使用 sqlx 离线，请确保仓库中有 .sqlx/ 并在 Dockerfile 里 COPY 进去
          build-args: |
            SQLX_OFFLINE=true
          cache-from: |
            type=gha
            type=registry,ref=${{ steps.img.outputs.cache_ref }}
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ steps.img.outputs.cache_ref }},mode=max,compression=zstd
